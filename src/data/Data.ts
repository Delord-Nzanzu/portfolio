import { article } from "../interface/article";

export const dataArticle: article[] = [
  {
    id: 1,
    title: "Comprendre et utiliser useContext en React.js",
    description:
      "React propose plusieurs solutions pour gÃ©rer lâ€™Ã©tat et partager des donnÃ©es entre composants. Parmi elles, le Contexte React (useContext) permet dâ€™Ã©viter le prop drilling (passer des props Ã  chaque niveau) et de rendre le code plus clair et maintenable.",
    link: "https://medium.com/@wayirenzanzu/comprendre-et-utiliser-usecontext-en-react-js-08cac64db7c7",
  },
  {
    id: 2,
    title: "ðŸš€ Migrer vos fichiers Node.js de require Ã  import facilement ! ðŸš€",
    description:
      "Avec lâ€™Ã©volution de #JavaScript, lâ€™utilisation des modules #ECMAScript (ESM) devient de plus en plus courante. Si vous travaillez encore avec #require, voici comment passer Ã  #import sans stress ðŸ˜Š !",
    link: "https://medium.com/@wayirenzanzu/migrer-vos-fichiers-node-js-de-require-%C3%A0-import-facilement-50dbdb5fc3dd",
  },
  {
    id: 3,
    title:
      "ðŸ“Œ Comprendre git checkout -- ., git reset et git reset --hard HEAD~1",
    description:
      "commandes peuvent Ãªtre un peu intimidantes, surtout lorsquâ€™elles affectent directement nos fichiers. Aujourdâ€™hui, on va dÃ©crypter trois commandes souvent utilisÃ©es pour rÃ©initialiser un projet Ã  un Ã©tat antÃ©rieur :",
    link: "https://medium.com/@wayirenzanzu/comprendre-git-checkout-git-reset-et-git-reset-hard-head-1-20919cefa6c9",
  },
];
